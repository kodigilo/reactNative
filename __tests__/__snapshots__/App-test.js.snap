// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`teste renderização botão localização 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontSize": 18,
            "margin": 8,
            "textAlign": "center",
          },
        ]
      }
    >
      Minha localização
    </Text>
  </View>
</View>
`;

exports[`teste renderização google maps 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      Object {
        "padding": 0,
      },
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={false}
    onContentProcessDidTerminate={[Function]}
    onHttpError={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    scalesPageToFit={false}
    source={
      Object {
        "html": "<iframe src=\\"http://maps.google.com/maps?q=-23.5613496,-46.665249&z=16&output=embed\\" width=\\"100%\\" height=\\"100%\\" style=\\"border:0; padding: 0; margin: 0; border: none \\" allowfullscreen=\\"\\" loading=\\"lazy\\"></iframe>",
      }
    }
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    textInteractionEnabled={true}
    useSharedProcessPool={true}
  />
</View>
`;

exports[`teste renderização home 1`] = `
Array [
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 2,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "padding": 0,
            },
          ]
        }
      >
        <RNCWebView
          cacheEnabled={true}
          injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
          injectedJavaScriptForMainFrameOnly={true}
          javaScriptEnabled={true}
          messagingEnabled={false}
          onContentProcessDidTerminate={[Function]}
          onHttpError={[Function]}
          onLoadingError={[Function]}
          onLoadingFinish={[Function]}
          onLoadingProgress={[Function]}
          onLoadingStart={[Function]}
          onMessage={[Function]}
          onShouldStartLoadWithRequest={[Function]}
          scalesPageToFit={false}
          source={
            Object {
              "html": "<iframe src=\\"http://maps.google.com/maps?q=-23.5613496,-46.665249&z=16&output=embed\\" width=\\"100%\\" height=\\"100%\\" style=\\"border:0; padding: 0; margin: 0; border: none \\" allowfullscreen=\\"\\" loading=\\"lazy\\"></iframe>",
            }
          }
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "#ffffff",
              },
              undefined,
            ]
          }
          textInteractionEnabled={true}
          useSharedProcessPool={true}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "padding": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 20,
          }
        }
      />
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Minha localização
          </Text>
        </View>
      </View>
    </View>
  </View>,
  <ActivityIndicator
    color="#0000ff"
    size="large"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(255,255,255,0.5)",
        "border": 0,
        "bottom": 0,
        "elevation": 12,
        "justifyContent": "center",
        "left": 0,
        "margin": 0,
        "padding": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />,
]
`;

exports[`teste renderização infos clima tempo 1`] = `null`;

exports[`teste renderização infos endereço 1`] = `
<View
  style={
    Object {
      "marginBottom": 20,
    }
  }
/>
`;

exports[`teste service 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#007AFF",
            "fontSize": 18,
            "margin": 8,
            "textAlign": "center",
          },
        ]
      }
    >
      Minha localização
    </Text>
  </View>
</View>
`;
